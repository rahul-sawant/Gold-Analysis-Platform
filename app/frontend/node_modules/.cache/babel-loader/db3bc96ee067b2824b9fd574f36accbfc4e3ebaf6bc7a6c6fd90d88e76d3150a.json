{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Container,Button,ButtonGroup,Alert,Row,Col,Tab,Nav}from'react-bootstrap';import SignalDisplay from'../components/SignalDisplay';import LoadingSpinner from'../components/LoadingSpinner';import api from'../services/api';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Signals=()=>{const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[signals,setSignals]=useState({});const[selectedTimeframe,setSelectedTimeframe]=useState('1h');const[lastUpdate,setLastUpdate]=useState(null);const timeframes=['1h','4h','1d','1w'];// Fetch signals\nconst fetchSignals=async()=>{setLoading(true);setError(null);try{// Option 1: Fetch all signals at once\nconst response=await api.getAllSignals();setSignals(response.data);// Option 2: Fetch only the selected timeframe\n// const response = await api.getSignal(selectedTimeframe);\n// setSignals(prev => ({\n//   ...prev,\n//   [selectedTimeframe]: response.data\n// }));\nsetLastUpdate(new Date());}catch(err){console.error('Error fetching signals:',err);setError('Failed to load signals. Please try again later.');}finally{setLoading(false);}};// Change timeframe\nconst handleTimeframeChange=timeframe=>{setSelectedTimeframe(timeframe);};// Refresh data\nconst handleRefresh=()=>{fetchSignals();};// Update data from source\nconst handleUpdateData=async()=>{try{setLoading(true);await api.updateData();fetchSignals();}catch(err){console.error('Error updating data:',err);setError('Failed to update data. Please try again later.');setLoading(false);}};// Initial data load\nuseEffect(()=>{fetchSignals();},[]);if(loading&&Object.keys(signals).length===0){return/*#__PURE__*/_jsx(LoadingSpinner,{text:\"Loading signals...\"});}return/*#__PURE__*/_jsxs(Container,{fluid:true,className:\"dashboard-container\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"page-title\",children:\"Trading Signals\"}),error&&/*#__PURE__*/_jsx(Alert,{variant:\"danger\",children:error}),/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex justify-content-between align-items-center mb-4\",children:[/*#__PURE__*/_jsxs(ButtonGroup,{className:\"timeframe-selector\",children:[/*#__PURE__*/_jsx(Button,{variant:selectedTimeframe==='1h'?'warning':'outline-warning',onClick:()=>handleTimeframeChange('1h'),children:\"1 Hour\"}),/*#__PURE__*/_jsx(Button,{variant:selectedTimeframe==='4h'?'warning':'outline-warning',onClick:()=>handleTimeframeChange('4h'),children:\"4 Hours\"}),/*#__PURE__*/_jsx(Button,{variant:selectedTimeframe==='1d'?'warning':'outline-warning',onClick:()=>handleTimeframeChange('1d'),children:\"Daily\"}),/*#__PURE__*/_jsx(Button,{variant:selectedTimeframe==='1w'?'warning':'outline-warning',onClick:()=>handleTimeframeChange('1w'),children:\"Weekly\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Button,{variant:\"outline-primary\",onClick:handleRefresh,className:\"me-2\",children:\"Refresh\"}),/*#__PURE__*/_jsx(Button,{variant:\"outline-success\",onClick:handleUpdateData,children:\"Update Data\"}),lastUpdate&&/*#__PURE__*/_jsxs(\"small\",{className:\"text-muted ms-2\",children:[\"Last updated: \",lastUpdate.toLocaleTimeString()]})]})]}),/*#__PURE__*/_jsx(Row,{className:\"mb-4\",children:/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(SignalDisplay,{signal:signals[selectedTimeframe]})})}),/*#__PURE__*/_jsx(\"h2\",{className:\"mb-3\",children:\"All Timeframes\"}),/*#__PURE__*/_jsx(Tab.Container,{id:\"signals-tabs\",defaultActiveKey:\"1h\",children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{sm:12,children:/*#__PURE__*/_jsx(Nav,{variant:\"tabs\",className:\"mb-3\",children:timeframes.map(tf=>/*#__PURE__*/_jsx(Nav.Item,{children:/*#__PURE__*/_jsx(Nav.Link,{eventKey:tf,children:tf==='1h'?'1 Hour':tf==='4h'?'4 Hours':tf==='1d'?'Daily':'Weekly'})},tf))})}),/*#__PURE__*/_jsx(Col,{sm:12,children:/*#__PURE__*/_jsx(Tab.Content,{children:timeframes.map(tf=>/*#__PURE__*/_jsx(Tab.Pane,{eventKey:tf,children:/*#__PURE__*/_jsx(SignalDisplay,{signal:signals[tf]})},tf))})})]})})]});};export default Signals;","map":{"version":3,"names":["React","useState","useEffect","Container","Button","ButtonGroup","Alert","Row","Col","Tab","Nav","SignalDisplay","LoadingSpinner","api","jsx","_jsx","jsxs","_jsxs","Signals","loading","setLoading","error","setError","signals","setSignals","selectedTimeframe","setSelectedTimeframe","lastUpdate","setLastUpdate","timeframes","fetchSignals","response","getAllSignals","data","Date","err","console","handleTimeframeChange","timeframe","handleRefresh","handleUpdateData","updateData","Object","keys","length","text","fluid","className","children","variant","onClick","toLocaleTimeString","signal","id","defaultActiveKey","sm","map","tf","Item","Link","eventKey","Content","Pane"],"sources":["/Users/rahulsawant/Documents/Projects/goldpredict/Gold Analysis Platform/app/frontend/src/pages/Signals.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Button, ButtonGroup, Alert, Row, Col, Tab, Nav } from 'react-bootstrap';\nimport SignalDisplay from '../components/SignalDisplay';\nimport LoadingSpinner from '../components/LoadingSpinner';\nimport api from '../services/api';\n\nconst Signals = () => {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [signals, setSignals] = useState({});\n  const [selectedTimeframe, setSelectedTimeframe] = useState('1h');\n  const [lastUpdate, setLastUpdate] = useState(null);\n\n  const timeframes = ['1h', '4h', '1d', '1w'];\n\n  // Fetch signals\n  const fetchSignals = async () => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      // Option 1: Fetch all signals at once\n      const response = await api.getAllSignals();\n      setSignals(response.data);\n      \n      // Option 2: Fetch only the selected timeframe\n      // const response = await api.getSignal(selectedTimeframe);\n      // setSignals(prev => ({\n      //   ...prev,\n      //   [selectedTimeframe]: response.data\n      // }));\n      \n      setLastUpdate(new Date());\n    } catch (err) {\n      console.error('Error fetching signals:', err);\n      setError('Failed to load signals. Please try again later.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Change timeframe\n  const handleTimeframeChange = (timeframe) => {\n    setSelectedTimeframe(timeframe);\n  };\n  \n  // Refresh data\n  const handleRefresh = () => {\n    fetchSignals();\n  };\n\n  // Update data from source\n  const handleUpdateData = async () => {\n    try {\n      setLoading(true);\n      await api.updateData();\n      fetchSignals();\n    } catch (err) {\n      console.error('Error updating data:', err);\n      setError('Failed to update data. Please try again later.');\n      setLoading(false);\n    }\n  };\n\n  // Initial data load\n  useEffect(() => {\n    fetchSignals();\n  }, []);\n\n  if (loading && Object.keys(signals).length === 0) {\n    return <LoadingSpinner text=\"Loading signals...\" />;\n  }\n\n  return (\n    <Container fluid className=\"dashboard-container\">\n      <h1 className=\"page-title\">Trading Signals</h1>\n      \n      {error && <Alert variant=\"danger\">{error}</Alert>}\n      \n      <div className=\"d-flex justify-content-between align-items-center mb-4\">\n        <ButtonGroup className=\"timeframe-selector\">\n          <Button \n            variant={selectedTimeframe === '1h' ? 'warning' : 'outline-warning'}\n            onClick={() => handleTimeframeChange('1h')}\n          >\n            1 Hour\n          </Button>\n          <Button \n            variant={selectedTimeframe === '4h' ? 'warning' : 'outline-warning'}\n            onClick={() => handleTimeframeChange('4h')}\n          >\n            4 Hours\n          </Button>\n          <Button \n            variant={selectedTimeframe === '1d' ? 'warning' : 'outline-warning'}\n            onClick={() => handleTimeframeChange('1d')}\n          >\n            Daily\n          </Button>\n          <Button \n            variant={selectedTimeframe === '1w' ? 'warning' : 'outline-warning'}\n            onClick={() => handleTimeframeChange('1w')}\n          >\n            Weekly\n          </Button>\n        </ButtonGroup>\n        \n        <div>\n          <Button variant=\"outline-primary\" onClick={handleRefresh} className=\"me-2\">\n            Refresh\n          </Button>\n          <Button variant=\"outline-success\" onClick={handleUpdateData}>\n            Update Data\n          </Button>\n          {lastUpdate && (\n            <small className=\"text-muted ms-2\">\n              Last updated: {lastUpdate.toLocaleTimeString()}\n            </small>\n          )}\n        </div>\n      </div>\n\n      {/* Display signal for selected timeframe */}\n      <Row className=\"mb-4\">\n        <Col>\n          <SignalDisplay signal={signals[selectedTimeframe]} />\n        </Col>\n      </Row>\n      \n      {/* Tabs for all timeframes */}\n      <h2 className=\"mb-3\">All Timeframes</h2>\n      <Tab.Container id=\"signals-tabs\" defaultActiveKey=\"1h\">\n        <Row>\n          <Col sm={12}>\n            <Nav variant=\"tabs\" className=\"mb-3\">\n              {timeframes.map(tf => (\n                <Nav.Item key={tf}>\n                  <Nav.Link eventKey={tf}>\n                    {tf === '1h' ? '1 Hour' : \n                     tf === '4h' ? '4 Hours' : \n                     tf === '1d' ? 'Daily' : 'Weekly'}\n                  </Nav.Link>\n                </Nav.Item>\n              ))}\n            </Nav>\n          </Col>\n          <Col sm={12}>\n            <Tab.Content>\n              {timeframes.map(tf => (\n                <Tab.Pane key={tf} eventKey={tf}>\n                  <SignalDisplay signal={signals[tf]} />\n                </Tab.Pane>\n              ))}\n            </Tab.Content>\n          </Col>\n        </Row>\n      </Tab.Container>\n    </Container>\n  );\n};\n\nexport default Signals; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}