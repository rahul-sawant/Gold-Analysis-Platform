{"ast":null,"code":"import _objectSpread from\"/Users/rahulsawant/Documents/Projects/goldpredict/Gold Analysis Platform/app/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{Container,Row,Col,Card,Form,Button,Alert,Table,Badge,Tabs,Tab}from'react-bootstrap';import LoadingSpinner from'../components/LoadingSpinner';import SignalDisplay from'../components/SignalDisplay';import api from'../services/api';import moment from'moment';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const Trading=()=>{var _zerodhaStatus$profil,_zerodhaStatus$margin,_zerodhaStatus$margin2,_zerodhaStatus$margin3;const[loading,setLoading]=useState(true);const[submitting,setSubmitting]=useState(false);const[error,setError]=useState(null);const[success,setSuccess]=useState(null);const[signal,setSignal]=useState({});const[zerodhaStatus,setZerodhaStatus]=useState({isLoggedIn:false,profile:null,margins:null});const[orders,setOrders]=useState([]);const[positions,setPositions]=useState([]);const[tradeForm,setTradeForm]=useState({timeframe:'1h',quantity:1,orderType:'MARKET',stopLoss:null,takeProfit:null,useSignalLevels:true});// Fetch initial data\nconst fetchData=async()=>{setLoading(true);setError(null);try{// Check Zerodha login status\ntry{const profileResponse=await api.getZerodhaProfile();setZerodhaStatus({isLoggedIn:true,profile:profileResponse.data});// If logged in, fetch margins\nconst marginsResponse=await api.getZerodhaMargins();setZerodhaStatus(prev=>_objectSpread(_objectSpread({},prev),{},{margins:marginsResponse.data}));// Fetch orders and positions\nconst[ordersResponse,positionsResponse]=await Promise.all([api.getZerodhaOrders(),api.getZerodhaPositions()]);setOrders(ordersResponse.data);setPositions(positionsResponse.data);}catch(err){console.log('Not logged in to Zerodha');setZerodhaStatus({isLoggedIn:false,profile:null,margins:null});}// Fetch current signal\nconst signalResponse=await api.getSignal(tradeForm.timeframe);setSignal(signalResponse.data);// Set stop loss and take profit from signal if available\nif(signalResponse.data&&signalResponse.data.stop_loss&&signalResponse.data.take_profit){setTradeForm(prev=>_objectSpread(_objectSpread({},prev),{},{stopLoss:signalResponse.data.stop_loss,takeProfit:signalResponse.data.take_profit}));}}catch(err){console.error('Error loading trading data:',err);setError('Failed to load trading data. Please try again later.');}finally{setLoading(false);}};// Handle Zerodha login\nconst handleZerodhaLogin=async()=>{try{const response=await api.getZerodhaLoginUrl();window.location.href=response.data.login_url;}catch(err){console.error('Error getting Zerodha login URL:',err);setError('Failed to initiate Zerodha login. Please try again later.');}};// Handle form changes\nconst handleFormChange=e=>{const{name,value,type,checked}=e.target;setTradeForm(prev=>_objectSpread(_objectSpread({},prev),{},{[name]:type==='checkbox'?checked:value}));};// Handle timeframe change\nconst handleTimeframeChange=async timeframe=>{setTradeForm(prev=>_objectSpread(_objectSpread({},prev),{},{timeframe}));try{setLoading(true);const signalResponse=await api.getSignal(timeframe);setSignal(signalResponse.data);// Update stop loss and take profit if useSignalLevels is true\nif(tradeForm.useSignalLevels&&signalResponse.data){setTradeForm(prev=>_objectSpread(_objectSpread({},prev),{},{stopLoss:signalResponse.data.stop_loss,takeProfit:signalResponse.data.take_profit}));}}catch(err){console.error('Error fetching signal for timeframe:',err);}finally{setLoading(false);}};// Handle trade execution\nconst handleExecuteTrade=async action=>{setSubmitting(true);setError(null);setSuccess(null);try{if(!zerodhaStatus.isLoggedIn){setError('You must log in to Zerodha to execute trades.');setSubmitting(false);return;}const tradeData={action:action,// 'BUY' or 'SELL'\ntimeframe:tradeForm.timeframe,quantity:parseInt(tradeForm.quantity),order_type:tradeForm.orderType,stop_loss:tradeForm.useSignalLevels&&signal.stop_loss?signal.stop_loss:tradeForm.stopLoss,take_profit:tradeForm.useSignalLevels&&signal.take_profit?signal.take_profit:tradeForm.takeProfit};const response=await api.placeTradeFromSignal(tradeData);setSuccess(\"Trade executed successfully! Order ID: \".concat(response.data.order_id));// Refresh orders\nconst ordersResponse=await api.getZerodhaOrders();setOrders(ordersResponse.data);}catch(err){console.error('Error executing trade:',err);setError('Failed to execute trade. Please check your inputs and try again.');}finally{setSubmitting(false);}};// Load data on component mount\nuseEffect(()=>{fetchData();},[]);// Order status badge\nconst getOrderStatusBadge=status=>{switch(status){case'COMPLETE':return/*#__PURE__*/_jsx(Badge,{bg:\"success\",children:\"Complete\"});case'REJECTED':return/*#__PURE__*/_jsx(Badge,{bg:\"danger\",children:\"Rejected\"});case'CANCELLED':return/*#__PURE__*/_jsx(Badge,{bg:\"warning\",children:\"Cancelled\"});case'PENDING':return/*#__PURE__*/_jsx(Badge,{bg:\"info\",children:\"Pending\"});default:return/*#__PURE__*/_jsx(Badge,{bg:\"secondary\",children:status});}};if(loading&&!zerodhaStatus.isLoggedIn&&!signal){return/*#__PURE__*/_jsx(LoadingSpinner,{text:\"Loading trading data...\"});}return/*#__PURE__*/_jsxs(Container,{fluid:true,className:\"dashboard-container\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"page-title\",children:\"Trading Dashboard\"}),error&&/*#__PURE__*/_jsx(Alert,{variant:\"danger\",children:error}),success&&/*#__PURE__*/_jsx(Alert,{variant:\"success\",children:success}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsxs(Col,{md:4,children:[/*#__PURE__*/_jsxs(Card,{className:\"mb-4\",children:[/*#__PURE__*/_jsx(Card.Header,{children:/*#__PURE__*/_jsx(\"h5\",{className:\"mb-0\",children:\"Zerodha Account\"})}),/*#__PURE__*/_jsx(Card.Body,{children:zerodhaStatus.isLoggedIn?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"h6\",{children:\"Account Status\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-success\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Connected\"}),\" - \",((_zerodhaStatus$profil=zerodhaStatus.profile)===null||_zerodhaStatus$profil===void 0?void 0:_zerodhaStatus$profil.user_name)||'User']})]}),zerodhaStatus.margins&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h6\",{children:\"Account Margins\"}),/*#__PURE__*/_jsx(\"table\",{className:\"table table-sm\",children:/*#__PURE__*/_jsxs(\"tbody\",{children:[/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"Available Margin\"}),/*#__PURE__*/_jsxs(\"td\",{className:\"text-end\",children:[\"\\u20B9\",((_zerodhaStatus$margin=zerodhaStatus.margins.available)===null||_zerodhaStatus$margin===void 0?void 0:_zerodhaStatus$margin.toLocaleString())||0]})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"Used Margin\"}),/*#__PURE__*/_jsxs(\"td\",{className:\"text-end\",children:[\"\\u20B9\",((_zerodhaStatus$margin2=zerodhaStatus.margins.used)===null||_zerodhaStatus$margin2===void 0?void 0:_zerodhaStatus$margin2.toLocaleString())||0]})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"strong\",{children:\"Total Margin\"})}),/*#__PURE__*/_jsx(\"td\",{className:\"text-end\",children:/*#__PURE__*/_jsxs(\"strong\",{children:[\"\\u20B9\",((_zerodhaStatus$margin3=zerodhaStatus.margins.total)===null||_zerodhaStatus$margin3===void 0?void 0:_zerodhaStatus$margin3.toLocaleString())||0]})})]})]})})]}),/*#__PURE__*/_jsx(Button,{variant:\"outline-primary\",className:\"mt-3\",onClick:fetchData,children:\"Refresh Account Data\"})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-danger mb-3\",children:\"Not connected to Zerodha\"}),/*#__PURE__*/_jsx(Button,{variant:\"warning\",onClick:handleZerodhaLogin,children:\"Login to Zerodha\"})]})})]}),/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(Card.Header,{children:/*#__PURE__*/_jsx(\"h5\",{className:\"mb-0\",children:\"Execute Trade\"})}),/*#__PURE__*/_jsx(Card.Body,{children:!zerodhaStatus.isLoggedIn?/*#__PURE__*/_jsx(Alert,{variant:\"warning\",children:\"Please log in to Zerodha to execute trades.\"}):/*#__PURE__*/_jsxs(Form,{className:\"trade-form\",children:[/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Signal Timeframe\"}),/*#__PURE__*/_jsxs(Form.Select,{name:\"timeframe\",value:tradeForm.timeframe,onChange:e=>handleTimeframeChange(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"1h\",children:\"1 Hour\"}),/*#__PURE__*/_jsx(\"option\",{value:\"4h\",children:\"4 Hours\"}),/*#__PURE__*/_jsx(\"option\",{value:\"1d\",children:\"Daily\"}),/*#__PURE__*/_jsx(\"option\",{value:\"1w\",children:\"Weekly\"})]})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Quantity\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"number\",name:\"quantity\",min:\"1\",value:tradeForm.quantity,onChange:handleFormChange})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Order Type\"}),/*#__PURE__*/_jsxs(Form.Select,{name:\"orderType\",value:tradeForm.orderType,onChange:handleFormChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"MARKET\",children:\"Market\"}),/*#__PURE__*/_jsx(\"option\",{value:\"LIMIT\",children:\"Limit\"}),/*#__PURE__*/_jsx(\"option\",{value:\"SL\",children:\"Stop Loss\"}),/*#__PURE__*/_jsx(\"option\",{value:\"SL-M\",children:\"Stop Loss Market\"})]})]}),/*#__PURE__*/_jsx(Form.Group,{className:\"mb-3\",children:/*#__PURE__*/_jsx(Form.Check,{type:\"checkbox\",id:\"useSignalLevels\",name:\"useSignalLevels\",label:\"Use signal stop loss and take profit levels\",checked:tradeForm.useSignalLevels,onChange:handleFormChange})}),!tradeForm.useSignalLevels&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Stop Loss\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"number\",name:\"stopLoss\",value:tradeForm.stopLoss||'',onChange:handleFormChange,step:\"0.01\"})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Take Profit\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"number\",name:\"takeProfit\",value:tradeForm.takeProfit||'',onChange:handleFormChange,step:\"0.01\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex justify-content-between mt-4\",children:[/*#__PURE__*/_jsx(Button,{variant:\"success\",onClick:()=>handleExecuteTrade('BUY'),disabled:submitting,className:\"w-100 me-2\",children:submitting?'Processing...':'BUY'}),/*#__PURE__*/_jsx(Button,{variant:\"danger\",onClick:()=>handleExecuteTrade('SELL'),disabled:submitting,className:\"w-100 ms-2\",children:submitting?'Processing...':'SELL'})]})]})})]})]}),/*#__PURE__*/_jsxs(Col,{md:8,children:[/*#__PURE__*/_jsxs(Card,{className:\"mb-4\",children:[/*#__PURE__*/_jsx(Card.Header,{children:/*#__PURE__*/_jsx(\"h5\",{className:\"mb-0\",children:\"Current Signal\"})}),/*#__PURE__*/_jsx(Card.Body,{children:/*#__PURE__*/_jsx(SignalDisplay,{signal:signal})})]}),/*#__PURE__*/_jsxs(Tabs,{defaultActiveKey:\"orders\",className:\"mb-3\",children:[/*#__PURE__*/_jsx(Tab,{eventKey:\"orders\",title:\"Recent Orders\",children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(Card.Body,{children:orders.length>0?/*#__PURE__*/_jsxs(Table,{responsive:true,striped:true,bordered:true,hover:true,children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Order ID\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Timestamp\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Symbol\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Type\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Quantity\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Price\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Status\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:orders.map((order,index)=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:order.order_id}),/*#__PURE__*/_jsx(\"td\",{children:moment(order.order_timestamp).format('MM/DD/YYYY HH:mm')}),/*#__PURE__*/_jsx(\"td\",{children:order.tradingsymbol}),/*#__PURE__*/_jsx(\"td\",{className:order.transaction_type==='BUY'?'text-success':'text-danger',children:order.transaction_type}),/*#__PURE__*/_jsx(\"td\",{children:order.quantity}),/*#__PURE__*/_jsx(\"td\",{children:order.price||'Market'}),/*#__PURE__*/_jsx(\"td\",{children:getOrderStatusBadge(order.status)})]},index))})]}):/*#__PURE__*/_jsx(\"p\",{className:\"text-muted\",children:\"No recent orders\"})})})}),/*#__PURE__*/_jsx(Tab,{eventKey:\"positions\",title:\"Current Positions\",children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(Card.Body,{children:positions.length>0?/*#__PURE__*/_jsxs(Table,{responsive:true,striped:true,bordered:true,hover:true,children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Symbol\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Quantity\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Average Price\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Current Price\"}),/*#__PURE__*/_jsx(\"th\",{children:\"P&L\"}),/*#__PURE__*/_jsx(\"th\",{children:\"% Change\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:positions.map((position,index)=>{var _position$average_pri,_position$last_price;const pnl=position.pnl||0;const pnlPercent=pnl/(position.average_price*position.quantity)*100||0;return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:position.tradingsymbol}),/*#__PURE__*/_jsx(\"td\",{className:position.quantity>0?'text-success':'text-danger',children:position.quantity}),/*#__PURE__*/_jsx(\"td\",{children:(_position$average_pri=position.average_price)===null||_position$average_pri===void 0?void 0:_position$average_pri.toFixed(2)}),/*#__PURE__*/_jsx(\"td\",{children:(_position$last_price=position.last_price)===null||_position$last_price===void 0?void 0:_position$last_price.toFixed(2)}),/*#__PURE__*/_jsxs(\"td\",{className:pnl>=0?'text-success':'text-danger',children:[pnl>=0?'+':'',pnl.toFixed(2)]}),/*#__PURE__*/_jsxs(\"td\",{className:pnlPercent>=0?'text-success':'text-danger',children:[pnlPercent>=0?'+':'',pnlPercent.toFixed(2),\"%\"]})]},index);})})]}):/*#__PURE__*/_jsx(\"p\",{className:\"text-muted\",children:\"No open positions\"})})})})]})]})]})]});};export default Trading;","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","Card","Form","Button","Alert","Table","Badge","Tabs","Tab","LoadingSpinner","SignalDisplay","api","moment","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Trading","_zerodhaStatus$profil","_zerodhaStatus$margin","_zerodhaStatus$margin2","_zerodhaStatus$margin3","loading","setLoading","submitting","setSubmitting","error","setError","success","setSuccess","signal","setSignal","zerodhaStatus","setZerodhaStatus","isLoggedIn","profile","margins","orders","setOrders","positions","setPositions","tradeForm","setTradeForm","timeframe","quantity","orderType","stopLoss","takeProfit","useSignalLevels","fetchData","profileResponse","getZerodhaProfile","data","marginsResponse","getZerodhaMargins","prev","_objectSpread","ordersResponse","positionsResponse","Promise","all","getZerodhaOrders","getZerodhaPositions","err","console","log","signalResponse","getSignal","stop_loss","take_profit","handleZerodhaLogin","response","getZerodhaLoginUrl","window","location","href","login_url","handleFormChange","e","name","value","type","checked","target","handleTimeframeChange","handleExecuteTrade","action","tradeData","parseInt","order_type","placeTradeFromSignal","concat","order_id","getOrderStatusBadge","status","bg","children","text","fluid","className","variant","md","Header","Body","user_name","available","toLocaleString","used","total","onClick","Group","Label","Select","onChange","Control","min","Check","id","label","step","disabled","defaultActiveKey","eventKey","title","length","responsive","striped","bordered","hover","map","order","index","order_timestamp","format","tradingsymbol","transaction_type","price","position","_position$average_pri","_position$last_price","pnl","pnlPercent","average_price","toFixed","last_price"],"sources":["/Users/rahulsawant/Documents/Projects/goldpredict/Gold Analysis Platform/app/frontend/src/pages/Trading.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Card, Form, Button, Alert, Table, Badge, Tabs, Tab } from 'react-bootstrap';\nimport LoadingSpinner from '../components/LoadingSpinner';\nimport SignalDisplay from '../components/SignalDisplay';\nimport api from '../services/api';\nimport moment from 'moment';\n\nconst Trading = () => {\n  const [loading, setLoading] = useState(true);\n  const [submitting, setSubmitting] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const [signal, setSignal] = useState({});\n  const [zerodhaStatus, setZerodhaStatus] = useState({\n    isLoggedIn: false,\n    profile: null,\n    margins: null\n  });\n  const [orders, setOrders] = useState([]);\n  const [positions, setPositions] = useState([]);\n  const [tradeForm, setTradeForm] = useState({\n    timeframe: '1h',\n    quantity: 1,\n    orderType: 'MARKET',\n    stopLoss: null,\n    takeProfit: null,\n    useSignalLevels: true\n  });\n\n  // Fetch initial data\n  const fetchData = async () => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      // Check Zerodha login status\n      try {\n        const profileResponse = await api.getZerodhaProfile();\n        setZerodhaStatus({\n          isLoggedIn: true,\n          profile: profileResponse.data\n        });\n        \n        // If logged in, fetch margins\n        const marginsResponse = await api.getZerodhaMargins();\n        setZerodhaStatus(prev => ({\n          ...prev,\n          margins: marginsResponse.data\n        }));\n        \n        // Fetch orders and positions\n        const [ordersResponse, positionsResponse] = await Promise.all([\n          api.getZerodhaOrders(),\n          api.getZerodhaPositions()\n        ]);\n        \n        setOrders(ordersResponse.data);\n        setPositions(positionsResponse.data);\n      } catch (err) {\n        console.log('Not logged in to Zerodha');\n        setZerodhaStatus({\n          isLoggedIn: false,\n          profile: null,\n          margins: null\n        });\n      }\n      \n      // Fetch current signal\n      const signalResponse = await api.getSignal(tradeForm.timeframe);\n      setSignal(signalResponse.data);\n      \n      // Set stop loss and take profit from signal if available\n      if (signalResponse.data && signalResponse.data.stop_loss && signalResponse.data.take_profit) {\n        setTradeForm(prev => ({\n          ...prev,\n          stopLoss: signalResponse.data.stop_loss,\n          takeProfit: signalResponse.data.take_profit\n        }));\n      }\n    } catch (err) {\n      console.error('Error loading trading data:', err);\n      setError('Failed to load trading data. Please try again later.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle Zerodha login\n  const handleZerodhaLogin = async () => {\n    try {\n      const response = await api.getZerodhaLoginUrl();\n      window.location.href = response.data.login_url;\n    } catch (err) {\n      console.error('Error getting Zerodha login URL:', err);\n      setError('Failed to initiate Zerodha login. Please try again later.');\n    }\n  };\n\n  // Handle form changes\n  const handleFormChange = (e) => {\n    const { name, value, type, checked } = e.target;\n    setTradeForm(prev => ({\n      ...prev,\n      [name]: type === 'checkbox' ? checked : value\n    }));\n  };\n\n  // Handle timeframe change\n  const handleTimeframeChange = async (timeframe) => {\n    setTradeForm(prev => ({ ...prev, timeframe }));\n    \n    try {\n      setLoading(true);\n      const signalResponse = await api.getSignal(timeframe);\n      setSignal(signalResponse.data);\n      \n      // Update stop loss and take profit if useSignalLevels is true\n      if (tradeForm.useSignalLevels && signalResponse.data) {\n        setTradeForm(prev => ({\n          ...prev,\n          stopLoss: signalResponse.data.stop_loss,\n          takeProfit: signalResponse.data.take_profit\n        }));\n      }\n    } catch (err) {\n      console.error('Error fetching signal for timeframe:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle trade execution\n  const handleExecuteTrade = async (action) => {\n    setSubmitting(true);\n    setError(null);\n    setSuccess(null);\n    \n    try {\n      if (!zerodhaStatus.isLoggedIn) {\n        setError('You must log in to Zerodha to execute trades.');\n        setSubmitting(false);\n        return;\n      }\n      \n      const tradeData = {\n        action: action, // 'BUY' or 'SELL'\n        timeframe: tradeForm.timeframe,\n        quantity: parseInt(tradeForm.quantity),\n        order_type: tradeForm.orderType,\n        stop_loss: tradeForm.useSignalLevels && signal.stop_loss ? signal.stop_loss : tradeForm.stopLoss,\n        take_profit: tradeForm.useSignalLevels && signal.take_profit ? signal.take_profit : tradeForm.takeProfit\n      };\n      \n      const response = await api.placeTradeFromSignal(tradeData);\n      setSuccess(`Trade executed successfully! Order ID: ${response.data.order_id}`);\n      \n      // Refresh orders\n      const ordersResponse = await api.getZerodhaOrders();\n      setOrders(ordersResponse.data);\n    } catch (err) {\n      console.error('Error executing trade:', err);\n      setError('Failed to execute trade. Please check your inputs and try again.');\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  // Load data on component mount\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  // Order status badge\n  const getOrderStatusBadge = (status) => {\n    switch (status) {\n      case 'COMPLETE':\n        return <Badge bg=\"success\">Complete</Badge>;\n      case 'REJECTED':\n        return <Badge bg=\"danger\">Rejected</Badge>;\n      case 'CANCELLED':\n        return <Badge bg=\"warning\">Cancelled</Badge>;\n      case 'PENDING':\n        return <Badge bg=\"info\">Pending</Badge>;\n      default:\n        return <Badge bg=\"secondary\">{status}</Badge>;\n    }\n  };\n\n  if (loading && !zerodhaStatus.isLoggedIn && !signal) {\n    return <LoadingSpinner text=\"Loading trading data...\" />;\n  }\n\n  return (\n    <Container fluid className=\"dashboard-container\">\n      <h1 className=\"page-title\">Trading Dashboard</h1>\n      \n      {error && <Alert variant=\"danger\">{error}</Alert>}\n      {success && <Alert variant=\"success\">{success}</Alert>}\n      \n      <Row>\n        <Col md={4}>\n          <Card className=\"mb-4\">\n            <Card.Header>\n              <h5 className=\"mb-0\">Zerodha Account</h5>\n            </Card.Header>\n            <Card.Body>\n              {zerodhaStatus.isLoggedIn ? (\n                <>\n                  <div className=\"mb-3\">\n                    <h6>Account Status</h6>\n                    <p className=\"text-success\">\n                      <strong>Connected</strong> - {zerodhaStatus.profile?.user_name || 'User'}\n                    </p>\n                  </div>\n                  \n                  {zerodhaStatus.margins && (\n                    <div>\n                      <h6>Account Margins</h6>\n                      <table className=\"table table-sm\">\n                        <tbody>\n                          <tr>\n                            <td>Available Margin</td>\n                            <td className=\"text-end\">\n                              ₹{zerodhaStatus.margins.available?.toLocaleString() || 0}\n                            </td>\n                          </tr>\n                          <tr>\n                            <td>Used Margin</td>\n                            <td className=\"text-end\">\n                              ₹{zerodhaStatus.margins.used?.toLocaleString() || 0}\n                            </td>\n                          </tr>\n                          <tr>\n                            <td><strong>Total Margin</strong></td>\n                            <td className=\"text-end\">\n                              <strong>₹{zerodhaStatus.margins.total?.toLocaleString() || 0}</strong>\n                            </td>\n                          </tr>\n                        </tbody>\n                      </table>\n                    </div>\n                  )}\n                  \n                  <Button \n                    variant=\"outline-primary\" \n                    className=\"mt-3\" \n                    onClick={fetchData}\n                  >\n                    Refresh Account Data\n                  </Button>\n                </>\n              ) : (\n                <div className=\"text-center\">\n                  <p className=\"text-danger mb-3\">Not connected to Zerodha</p>\n                  <Button variant=\"warning\" onClick={handleZerodhaLogin}>\n                    Login to Zerodha\n                  </Button>\n                </div>\n              )}\n            </Card.Body>\n          </Card>\n          \n          <Card>\n            <Card.Header>\n              <h5 className=\"mb-0\">Execute Trade</h5>\n            </Card.Header>\n            <Card.Body>\n              {!zerodhaStatus.isLoggedIn ? (\n                <Alert variant=\"warning\">\n                  Please log in to Zerodha to execute trades.\n                </Alert>\n              ) : (\n                <Form className=\"trade-form\">\n                  <Form.Group className=\"mb-3\">\n                    <Form.Label>Signal Timeframe</Form.Label>\n                    <Form.Select \n                      name=\"timeframe\"\n                      value={tradeForm.timeframe}\n                      onChange={(e) => handleTimeframeChange(e.target.value)}\n                    >\n                      <option value=\"1h\">1 Hour</option>\n                      <option value=\"4h\">4 Hours</option>\n                      <option value=\"1d\">Daily</option>\n                      <option value=\"1w\">Weekly</option>\n                    </Form.Select>\n                  </Form.Group>\n                  \n                  <Form.Group className=\"mb-3\">\n                    <Form.Label>Quantity</Form.Label>\n                    <Form.Control \n                      type=\"number\" \n                      name=\"quantity\"\n                      min=\"1\"\n                      value={tradeForm.quantity}\n                      onChange={handleFormChange}\n                    />\n                  </Form.Group>\n                  \n                  <Form.Group className=\"mb-3\">\n                    <Form.Label>Order Type</Form.Label>\n                    <Form.Select \n                      name=\"orderType\"\n                      value={tradeForm.orderType}\n                      onChange={handleFormChange}\n                    >\n                      <option value=\"MARKET\">Market</option>\n                      <option value=\"LIMIT\">Limit</option>\n                      <option value=\"SL\">Stop Loss</option>\n                      <option value=\"SL-M\">Stop Loss Market</option>\n                    </Form.Select>\n                  </Form.Group>\n                  \n                  <Form.Group className=\"mb-3\">\n                    <Form.Check \n                      type=\"checkbox\"\n                      id=\"useSignalLevels\"\n                      name=\"useSignalLevels\"\n                      label=\"Use signal stop loss and take profit levels\"\n                      checked={tradeForm.useSignalLevels}\n                      onChange={handleFormChange}\n                    />\n                  </Form.Group>\n                  \n                  {!tradeForm.useSignalLevels && (\n                    <>\n                      <Form.Group className=\"mb-3\">\n                        <Form.Label>Stop Loss</Form.Label>\n                        <Form.Control \n                          type=\"number\" \n                          name=\"stopLoss\"\n                          value={tradeForm.stopLoss || ''}\n                          onChange={handleFormChange}\n                          step=\"0.01\"\n                        />\n                      </Form.Group>\n                      \n                      <Form.Group className=\"mb-3\">\n                        <Form.Label>Take Profit</Form.Label>\n                        <Form.Control \n                          type=\"number\" \n                          name=\"takeProfit\"\n                          value={tradeForm.takeProfit || ''}\n                          onChange={handleFormChange}\n                          step=\"0.01\"\n                        />\n                      </Form.Group>\n                    </>\n                  )}\n                  \n                  <div className=\"d-flex justify-content-between mt-4\">\n                    <Button \n                      variant=\"success\" \n                      onClick={() => handleExecuteTrade('BUY')}\n                      disabled={submitting}\n                      className=\"w-100 me-2\"\n                    >\n                      {submitting ? 'Processing...' : 'BUY'}\n                    </Button>\n                    <Button \n                      variant=\"danger\" \n                      onClick={() => handleExecuteTrade('SELL')}\n                      disabled={submitting}\n                      className=\"w-100 ms-2\"\n                    >\n                      {submitting ? 'Processing...' : 'SELL'}\n                    </Button>\n                  </div>\n                </Form>\n              )}\n            </Card.Body>\n          </Card>\n        </Col>\n        \n        <Col md={8}>\n          <Card className=\"mb-4\">\n            <Card.Header>\n              <h5 className=\"mb-0\">Current Signal</h5>\n            </Card.Header>\n            <Card.Body>\n              <SignalDisplay signal={signal} />\n            </Card.Body>\n          </Card>\n          \n          <Tabs defaultActiveKey=\"orders\" className=\"mb-3\">\n            <Tab eventKey=\"orders\" title=\"Recent Orders\">\n              <Card>\n                <Card.Body>\n                  {orders.length > 0 ? (\n                    <Table responsive striped bordered hover>\n                      <thead>\n                        <tr>\n                          <th>Order ID</th>\n                          <th>Timestamp</th>\n                          <th>Symbol</th>\n                          <th>Type</th>\n                          <th>Quantity</th>\n                          <th>Price</th>\n                          <th>Status</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {orders.map((order, index) => (\n                          <tr key={index}>\n                            <td>{order.order_id}</td>\n                            <td>{moment(order.order_timestamp).format('MM/DD/YYYY HH:mm')}</td>\n                            <td>{order.tradingsymbol}</td>\n                            <td className={order.transaction_type === 'BUY' ? 'text-success' : 'text-danger'}>\n                              {order.transaction_type}\n                            </td>\n                            <td>{order.quantity}</td>\n                            <td>{order.price || 'Market'}</td>\n                            <td>{getOrderStatusBadge(order.status)}</td>\n                          </tr>\n                        ))}\n                      </tbody>\n                    </Table>\n                  ) : (\n                    <p className=\"text-muted\">No recent orders</p>\n                  )}\n                </Card.Body>\n              </Card>\n            </Tab>\n            <Tab eventKey=\"positions\" title=\"Current Positions\">\n              <Card>\n                <Card.Body>\n                  {positions.length > 0 ? (\n                    <Table responsive striped bordered hover>\n                      <thead>\n                        <tr>\n                          <th>Symbol</th>\n                          <th>Quantity</th>\n                          <th>Average Price</th>\n                          <th>Current Price</th>\n                          <th>P&L</th>\n                          <th>% Change</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {positions.map((position, index) => {\n                          const pnl = position.pnl || 0;\n                          const pnlPercent = ((pnl / (position.average_price * position.quantity)) * 100) || 0;\n                          \n                          return (\n                            <tr key={index}>\n                              <td>{position.tradingsymbol}</td>\n                              <td className={position.quantity > 0 ? 'text-success' : 'text-danger'}>\n                                {position.quantity}\n                              </td>\n                              <td>{position.average_price?.toFixed(2)}</td>\n                              <td>{position.last_price?.toFixed(2)}</td>\n                              <td className={pnl >= 0 ? 'text-success' : 'text-danger'}>\n                                {pnl >= 0 ? '+' : ''}{pnl.toFixed(2)}\n                              </td>\n                              <td className={pnlPercent >= 0 ? 'text-success' : 'text-danger'}>\n                                {pnlPercent >= 0 ? '+' : ''}{pnlPercent.toFixed(2)}%\n                              </td>\n                            </tr>\n                          );\n                        })}\n                      </tbody>\n                    </Table>\n                  ) : (\n                    <p className=\"text-muted\">No open positions</p>\n                  )}\n                </Card.Body>\n              </Card>\n            </Tab>\n          </Tabs>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Trading; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}